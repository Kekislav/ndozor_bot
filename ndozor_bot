import telebot

bot = telebot.TeleBot('bot_token')

level_of_requestor = 0
level_of_requesting = 0
number_of_requestor = 0

user_id = 0
notify_id = 0

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, 'Иной, если ты решил кого-то просканировать, введи его номер:')

@bot.message_handler(content_types=['text'])

def compare(message):
    global level_of_requestor, number_of_requestor, level_of_requesting, notify_id, db_name, db_level, db_chat_id, db_id_level, db_false_info, db_info
    def DB(n, i):
        db_name = {
            123 : 'name', 
            321 : 'name',
            333 : 'name',
            555 : 'name' 
        }
        db_level = {
            123 : 1, 
            321 : 3,
            333 : 1,
            555 : 5 
        }
        db_chat_id = {
            'name' : chat_id,
            'name' : chat_id
        }
        db_id_level = {
            chat_id : 1,
            chat_id : 2
        }
        db_false_info = {
            123 : 'false1', 
            321 : 'false2', 
            333 : 'false3', 
            555 : 'false4'
        }
        db_info = {
            123 : 'True1', 
            321 : 'True2', 
            333 : 'True3', 
            555 : 'True4'
        }
        return eval(i)[n]  
    try: 
        DB(message.chat.id, 'db_id_level')
    except:
        bot.send_message(message.chat.id, 'Ты не в игре. Свяжись с мастерами. /start')
        bot.register_next_step_handler(message, start_message)
        return
    try:
        DB(int(message.text), 'db_level')
    except:
        bot.send_message(message.chat.id, 'Неверный номер. Введи номер того, кого хочешь просканировать.')
        bot.register_next_step_handler(message, compare)
        return
    notify_id = DB(DB(int(message.text), 'db_name'), 'db_chat_id')
    if level_of_requestor <= level_of_requesting:
        bot.send_message(message.chat.id, 'Информация: {} '.format(DB(int(message.text), 'db_false_info')))
        bot.send_message(notify_id, 'Вас просканировали')
    elif level_of_requestor > level_of_requesting:
        bot.send_message(message.chat.id, 'Защита слишком сильна. Информация: {} '.format(DB(int(message.text), 'db_info')))
        bot.send_message(notify_id, 'Вас пыталсь просканировать')
    bot.send_message(message.chat.id, 'Работа окончена. Если хочешь просканировать ещё раз, введи номер другого Иного.' + 
        ' Если хочешь начать сначала, введи /start')

bot.polling()
